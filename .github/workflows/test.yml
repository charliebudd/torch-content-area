name: Test Release

on:
  workflow_call:
    inputs:
      local-wheels:
        type: boolean
        default: true
      wheel-location:
        type: string
        default: final-wheels
      python-versions:
        type: string
        default: "[3.6, 3.7, 3.8]"
      pytorch-versions:
        type: string
        default: "[1.9, '1.10']"
      cuda-versions:
        type: string
        default: "[10.2, 11.3]"

jobs:
  build-wheels:
    name: Build Wheels
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        python: ${{ fromJson(inputs.python-versions) }}
        pytorch: ${{ fromJson(inputs.pytorch-versions) }}
        cuda: ${{ fromJson(inputs.cuda-versions) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install PyTorch
        run: python${{ matrix.python }} -m pip install torch==${{ matrix.pytorch }} -f https://download.pytorch.org/whl/cu$(echo ${{ matrix.cuda }} | sed 's/\.//')/torch_stable.html

      - name: Install Test Requirements
        run: python${{ matrix.python }} -m pip install numpy pillow
        
      - name: Install torchcontentarea From PyPI Index
        if: ${{ !inputs.local-wheels }}
        run: python${{ matrix.python }} -m pip install --force-reinstall torchcontentarea -i ${{ inputs.wheel-location }}
        
      - name: Download Cached Wheels
        if: ${{ inputs.local-wheels }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.wheel-location }}
          path: ${{ inputs.wheel-location }}
          
      - name: Install torchcontentarea From Chached Wheels
        if: ${{ inputs.local-wheels }}
        run: python${{ matrix.python }} -m pip install ${{ inputs.wheel-location }}/torchcontentarea*cp$(echo ${{ matrix.python }} | sed 's/\.//')*.whl

      - name: Run Tests
        run: python${{ matrix.python }} testing/test_performance.py
