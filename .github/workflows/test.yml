name: Test Release

on:
  workflow_call:
    inputs:
      local-wheels:
        type: boolean
        default: true
      wheel-location:
        type: string
        default: final-wheels
      python-versions:
        type: string
        default: "[3.6, 3.7, 3.8]"
      pytorch-versions:
        type: string
        default: "[1.9, '1.10']"
      cuda-versions:
        type: string
        default: "[10.2, 11.3]"

jobs:
  test-release:
    name: Test Release
    runs-on: [self-hosted, Linux, X64, gpu]
    strategy:
      fail-fast: false
      matrix:
        python: ${{ fromJson(inputs.python-versions) }}
        pytorch: ${{ fromJson(inputs.pytorch-versions) }}
        cuda: ${{ fromJson(inputs.cuda-versions) }}
        exclude:
          - pytorch: 1.9
            cuda: 11.3 
          - python: 3.6
            pytorch: 1.11
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Install Test Requirements
        run: |
          ENV=../.venv-${{ matrix.python }}-${{ matrix.pytorch }}-${{ matrix.cuda }}
          if [ -d "$ENV" ]; then
            . $ENV/bin/activate
          else
            python -m venv $ENV
            . $ENV/bin/activate
            python -m pip install -U --force-reinstall pip
            python -m pip install numpy pillow torch==${{ matrix.pytorch }} -f https://download.pytorch.org/whl/cu$(echo ${{ matrix.cuda }} | sed 's/\.//')/torch_stable.html
          fi

          python -V
          pip show torch
        
      - name: Install torchcontentarea From PyPI Index
        if: ${{ !inputs.local-wheels }}
        run: python -m pip install --force-reinstall torchcontentarea -i ${{ inputs.wheel-location }}
        
      - name: Download Cached Wheels
        if: ${{ inputs.local-wheels }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.wheel-location }}
          path: ${{ inputs.wheel-location }}
          
      - name: Install torchcontentarea from Cached Wheels
        if: ${{ inputs.local-wheels }}
        run: python -m pip install ${{ inputs.wheel-location }}/torchcontentarea*cp$(echo ${{ matrix.python }} | sed 's/\.//')*.whl

      - name: Run Tests
        run: python testing/test_performance.py
